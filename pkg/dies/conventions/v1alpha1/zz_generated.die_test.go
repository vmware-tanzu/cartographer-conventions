//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2020-2022 VMware Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by diegen. DO NOT EDIT.

package v1alpha1

import (
	testingx "testing"

	testing "dies.dev/testing"
)

func TestClusterPodConventionDie_MissingMethods(t *testingx.T) {
	die := ClusterPodConventionBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ClusterPodConventionDie: %s", diff.List())
	}
}

func TestClusterPodConventionSpecDie_MissingMethods(t *testingx.T) {
	die := ClusterPodConventionSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ClusterPodConventionSpecDie: %s", diff.List())
	}
}

func TestClusterPodConventionWebhookDie_MissingMethods(t *testingx.T) {
	die := ClusterPodConventionWebhookBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ClusterPodConventionWebhookDie: %s", diff.List())
	}
}

func TestClusterPodConventionWebhookCertificateDie_MissingMethods(t *testingx.T) {
	die := ClusterPodConventionWebhookCertificateBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ClusterPodConventionWebhookCertificateDie: %s", diff.List())
	}
}

func TestPodIntentDie_MissingMethods(t *testingx.T) {
	die := PodIntentBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PodIntentDie: %s", diff.List())
	}
}

func TestPodIntentSpecDie_MissingMethods(t *testingx.T) {
	die := PodIntentSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PodIntentSpecDie: %s", diff.List())
	}
}

func TestPodIntentStatusDie_MissingMethods(t *testingx.T) {
	die := PodIntentStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for PodIntentStatusDie: %s", diff.List())
	}
}
