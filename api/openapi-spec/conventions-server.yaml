openapi: 3.0.0
info:
  title: Conventions server 
  description: a sample conventions server.
  version: 1.0.0        
  license:
    name: Apache-2.0
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
paths:
  /webhook:
    post:  
      requestBody:
        content:
           "application/json":
              schema: 
               $ref: "#/components/schemas/PodConventionContext"
      responses:
        200:
          description: Return a succes message once all conventions are applied successfully
          content: 
            "application/json":
              schema:
               $ref: "#/components/schemas/PodConventionContext"
        400:
          description: Return an error if unable to decode request body into a PodConventionContext type or if request body is nil. 
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        500:
          description: Internal server error
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    PodConventionContext:
      description: | 
        A wrapper for the PodConventionContextSpec and the PodConventionContextStatus. The PodConventionContext as defined in the API object 
        webhooks.conventions.carto.run/v1alpha1 API group is the structure used for both request and response from the convention server.
      type: object
      properties:
        apiVersion: 
          type: string
        kind: 
          type: string
        metadata:
          type: object 
          properties:
            name: 
              type: string
        spec:
          $ref: "#/components/schemas/PodConventionContextSpec"
        status:
          $ref: "#/components/schemas/PodConventionContextStatus"
    PodConventionContextSpec:
      type: object
      description: a wrapper of the PodTemplateSpec and the ImageConfig provided in the request body of the server.
      properties:
        template:
          $ref: "#/components/schemas/PodTemplateSpec"
        imageConfig:
          type: array 
          description: |
            an array of imageConfig objects with each image configuration object holding the name of the image, the BOM, and the OCI image
            configuration with image metadata from the repository. Each of the image config array entries have a 1:1 mapping to 
            images referenced in the PodTemplateSpec. 
          items:
            $ref: "#/components/schemas/ImageConfig"
    PodTemplateSpec:
      type: object 
      properties:
        spec: 
          type: object
          description: defines the PodTemplateSpec to be enriched by conventions.
        metadata:
          type: object
          properties:
            annotations:
              type: object
              additionalProperties:
                type: string
            labels:
              type: object
              additionalProperties:
                type: string
    ImageConfig:
      type: object 
      properties: 
        image: 
          type: string 
          description: a string reference to the image name and tag or associated digest.
          example: "example.com/repository/nginx:alpine"
        BOMs:
          type: array
          description: | 
            an array of Bills of Materials (BOMs) describing the software components and their dependencies and may be zero or more per image.
          items:
            $ref: "#/components/schemas/BOM"
          example: | 
            "boms": [{
                "name": "bom-name",
                "raw": "a byte array"
            }],
        config: 
          type: object 
          description: a ggcrv1 config file object.
    BOM: 
      type: object 
      properties:
        name: 
          description: bom-name
          type: string 
        raw: 
          description: a base64 encoded string with the encoded content of the BOM.
          type: string
      example: | 
        {
          "name": "bom-name",
          "raw": "some byte array"
        }
    PodConventionContextStatus:
      description: status type used to represent the current status of the context retrieved by the request.
      type: object 
      properties:
        template: 
          $ref: "#/components/schemas/PodTemplateSpec"
        appliedConventions:
          description: list of names of conventions applied
          type: array 
          items:
            type: string
          example: |
              "appliedConventions": [ 
                "convention-1", 
                "convention-2",
                "convention-4" 
              ]        
    Error:
      type: object
      properties:
        message:
          type: string
          example: "Some unexpected error"
          
    ErrorResponse:
      type: object 
      properties:
        error:
          $ref: "#/components/schemas/Error"